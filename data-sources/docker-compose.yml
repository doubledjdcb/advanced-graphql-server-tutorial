version: "3.5"
services:
  mongo:
    image: mongo:4.0.4
    restart: always
    ports:
      - 27017:27017
    environment:
      MONGO_INITDB_DATABASE: central-library
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: rootpw
    volumes:
      - ./mongodb/db:/data/db
      - ./mongodb/init:/docker-entrypoint-initdb.d

  mysql:
    image: mysql:8.0.13
    command: --default-authentication-plugin=mysql_native_password
    restart: always
    ports:
      - 3306:3306
    environment:
      MYSQL_ROOT_PASSWORD: rootpw
      MYSQL_DATABASE: central-library
      MYSQL_USER: graphql
      MYSQL_PASSWORD: graphqlpw
    volumes:
      - ./mysql/db:/var/lib/mysql
      - ./mysql/init:/docker-entrypoint-initdb.d

  zoo1:
    image: zookeeper:3.4.13
    restart: always
    hostname: zoo1
    environment:
      ZOO_MY_ID: 1
      ZOO_SERVERS: server.1=0.0.0.0:2888:3888

  kafka1:
    image: wurstmeister/kafka:2.12-2.1.0 
    ports:
      - "9092:9092"
    environment:
      KAFKA_ADVERTISED_LISTENERS: INSIDE://:19092,OUTSIDE://127.0.0.1:9092
      KAFKA_LISTENERS: INSIDE://:19092,OUTSIDE://:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INSIDE:PLAINTEXT,OUTSIDE:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: INSIDE
      KAFKA_CREATE_TOPICS: checkin:1:1,checkout:1:1
      KAFKA_ZOOKEEPER_CONNECT: zoo1:2181
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    depends_on:
      - zoo1
  
  jwt:
    build: ./JWTService
    ports:
      - 4080:4080
    environment:
      - 'SERVER_PORT=4080'

networks:
  default:
    name: advanced-graphql-tutorial
